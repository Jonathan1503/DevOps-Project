{
	"info": {
		"_postman_id": "cb41c9e4-399e-4665-b815-124dd5d96f9e",
		"name": "Blacklist API",
		"description": "API para gestionar una lista negra de emails",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33994752"
	},
	"item": [
		{
			"name": "Añadir un email a la lista negra",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"ejemplo@dominio.com\",\n    \"app_uuid\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"blocked_reason\": \"Usuario reportado por spam\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/blacklists",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"blacklists"
					]
				},
				"description": "Permite agregar un email a la lista negra global de la organización. Requiere autenticación mediante token JWT.\n\n**Headers requeridos**:\n\n- Authorization: Bearer {token JWT}\n    \n- Content-Type: application/json\n    \n\n**Cuerpo de la solicitud (JSON)**:\n\n- email: Email a bloquear (obligatorio)\n    \n- app_uuid: UUID de la aplicación (obligatorio)\n    \n- blocked_reason: Razón del bloqueo (obligatorio)\n    \n\n**Respuestas**:\n\n- 201 Created: Email añadido exitosamente a la lista negra\n    \n- 400 Bad Request: Datos inválidos o faltantes\n    \n- 401 Unauthorized: Token JWT inválido o faltante\n    \n- 400 Bad Request: El email ya existe en la lista negra"
			},
			"response": [
				{
					"name": "Añadir un email a la lista negra",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"ejemplo@dominio.com\",\n    \"app_uuid\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"blocked_reason\": \"Usuario reportado por spam\"\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/blacklists",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"blacklists"
							]
						}
					},
					"status": "CREATED",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "Werkzeug/3.1.3 Python/3.12.3"
						},
						{
							"key": "Date",
							"value": "Mon, 31 Mar 2025 03:44:32 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "239"
						},
						{
							"key": "Connection",
							"value": "close"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 9,\n    \"email\": \"ejemplo@dominio.com\",\n    \"app_uuid\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"blocked_reason\": \"Usuario reportado por spam\",\n    \"ip_address\": \"127.0.0.1\",\n    \"created_at\": \"2025-03-31T03:44:32.589768\"\n}"
				}
			]
		},
		{
			"name": "Caso: Añadir email ya existente",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"ejemplo@dominio.com\",\n    \"app_uuid\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"blocked_reason\": \"Usuario reportado por spam\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/blacklists",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"blacklists"
					]
				},
				"description": "Este escenario prueba el caso en que intentamos añadir un email que ya está en la lista negra.\n\n**Resultado esperado**: Código 400 con mensaje indicando que el email ya existe."
			},
			"response": [
				{
					"name": "Caso: Añadir email ya existente",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJPbmxpbmUgSldUIEJ1aWxkZXIiLCJpYXQiOjE3NDMzNTQ4NzcsImV4cCI6MTc3NDg5MDg5MiwiYXVkIjoid3d3LmV4YW1wbGUuY29tIiwic3ViIjoianJvY2tldEBleGFtcGxlLmNvbSIsIkdpdmVuTmFtZSI6IkpvaG5ueSIsIlN1cm5hbWUiOiJSb2NrZXQiLCJFbWFpbCI6Impyb2NrZXRAZXhhbXBsZS5jb20iLCJSb2xlIjpbIk1hbmFnZXIiLCJQcm9qZWN0IEFkbWluaXN0cmF0b3IiXX0.eKKappNb0N-vJtrOnoOau-AnXvEN07Up_HspTt5pia8",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"ejemplo@dominio.com\",\n    \"app_uuid\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"blocked_reason\": \"Usuario reportado por spam\"\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/blacklists",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"blacklists"
							]
						}
					},
					"status": "BAD REQUEST",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "Werkzeug/3.1.3 Python/3.12.3"
						},
						{
							"key": "Date",
							"value": "Mon, 31 Mar 2025 03:44:54 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "60"
						},
						{
							"key": "Connection",
							"value": "close"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"Email already blacklisted for this app\"\n}"
				}
			]
		},
		{
			"name": "Caso: Email inválido",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"correo-invalido\",\n    \"app_uuid\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"blocked_reason\": \"Usuario reportado por spam\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/blacklists",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"blacklists"
					]
				},
				"description": "Este escenario prueba el caso en que intentamos añadir un email con formato inválido.\n\n**Resultado esperado**: Código 400 Bad Request con mensaje de validación."
			},
			"response": [
				{
					"name": "Caso: Email inválido",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJPbmxpbmUgSldUIEJ1aWxkZXIiLCJpYXQiOjE3NDMzNTQ4NzcsImV4cCI6MTc3NDg5MDg5MiwiYXVkIjoid3d3LmV4YW1wbGUuY29tIiwic3ViIjoianJvY2tldEBleGFtcGxlLmNvbSIsIkdpdmVuTmFtZSI6IkpvaG5ueSIsIlN1cm5hbWUiOiJSb2NrZXQiLCJFbWFpbCI6Impyb2NrZXRAZXhhbXBsZS5jb20iLCJSb2xlIjpbIk1hbmFnZXIiLCJQcm9qZWN0IEFkbWluaXN0cmF0b3IiXX0.eKKappNb0N-vJtrOnoOau-AnXvEN07Up_HspTt5pia8",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"correo-invalido\",\n    \"app_uuid\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"blocked_reason\": \"Usuario reportado por spam\"\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/blacklists",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"blacklists"
							]
						}
					},
					"status": "BAD REQUEST",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "Werkzeug/3.1.3 Python/3.12.3"
						},
						{
							"key": "Date",
							"value": "Mon, 31 Mar 2025 03:48:45 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "42"
						},
						{
							"key": "Connection",
							"value": "close"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"Invalid email format\"\n}"
				}
			]
		},
		{
			"name": "Caso: UUID inválido",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{jwt_token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"ejemplo@dominio.com\",\n    \"app_uuid\": \"123e4567-e89b-12d3-a456-426614174000aa\",\n    \"blocked_reason\": \"Usuario reportado por spam\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/blacklists",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"blacklists"
					]
				},
				"description": "Este escenario prueba el caso en que intentamos añadir un UUID con formato inválido.\n\n**Resultado esperado**: Código 400 Bad Request con mensaje de validación."
			},
			"response": [
				{
					"name": "Caso: Email inválido Copy",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJPbmxpbmUgSldUIEJ1aWxkZXIiLCJpYXQiOjE3NDMzNTQ4NzcsImV4cCI6MTc3NDg5MDg5MiwiYXVkIjoid3d3LmV4YW1wbGUuY29tIiwic3ViIjoianJvY2tldEBleGFtcGxlLmNvbSIsIkdpdmVuTmFtZSI6IkpvaG5ueSIsIlN1cm5hbWUiOiJSb2NrZXQiLCJFbWFpbCI6Impyb2NrZXRAZXhhbXBsZS5jb20iLCJSb2xlIjpbIk1hbmFnZXIiLCJQcm9qZWN0IEFkbWluaXN0cmF0b3IiXX0.eKKappNb0N-vJtrOnoOau-AnXvEN07Up_HspTt5pia8",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"ejemplo@dominio.com\",\n    \"app_uuid\": \"123e4567-e89b-12d3-a456-426614174000aa\",\n    \"blocked_reason\": \"Usuario reportado por spam\"\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/blacklists",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"blacklists"
							]
						}
					},
					"status": "BAD REQUEST",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "Werkzeug/3.1.3 Python/3.12.3"
						},
						{
							"key": "Date",
							"value": "Mon, 31 Mar 2025 03:49:44 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "41"
						},
						{
							"key": "Connection",
							"value": "close"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"Invalid UUID format\"\n}"
				}
			]
		},
		{
			"name": "Caso: Añadir email sin autorización",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"ejemplo@dominio.com\",\n    \"app_uuid\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"blocked_reason\": \"Usuario reportado por spam\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/blacklists",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"blacklists"
					]
				},
				"description": "Este escenario prueba el caso en que intentamos añadir un email sin proporcionar un token JWT.\n\n**Resultado esperado**: Código 401 Unauthorized con mensaje indicando que se requiere un token válido."
			},
			"response": [
				{
					"name": "Caso: Añadir email sin autorización",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"ejemplo@dominio.com\",\n    \"app_uuid\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"blocked_reason\": \"Usuario reportado por spam\"\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/blacklists",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"blacklists"
							]
						}
					},
					"status": "UNAUTHORIZED",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "Werkzeug/3.1.3 Python/3.12.3"
						},
						{
							"key": "Date",
							"value": "Mon, 31 Mar 2025 03:49:59 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "44"
						},
						{
							"key": "Connection",
							"value": "close"
						}
					],
					"cookie": [],
					"body": "{\n    \"msg\": \"Missing Authorization Header\"\n}"
				}
			]
		},
		{
			"name": "Verificar si un email está en la lista negra",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/blacklists/ejemplo@dominio.com",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"blacklists",
						"ejemplo@dominio.com"
					]
				},
				"description": "Permite saber si un email está en la lista negra global de la organización o no, y el motivo  \npor el que fue agregado a la lista negra. Requiere autenticación mediante token JWT.\n\n**Headers requeridos**:\n\n- Authorization: Bearer {token JWT}\n    \n\n**Parámetros de URL**:\n\n- email: El email que se desea verificar\n    \n\n**Respuestas**:\n\n- 200 OK: Un valor booleano indicando si está o no el email en la lista negra  \n    global y el motivo por el que fue agregado."
			},
			"response": [
				{
					"name": "Verificar si un email está en la lista negra",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/blacklists/ejemplo@dominio.com",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"blacklists",
								"ejemplo@dominio.com"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "Werkzeug/3.1.3 Python/3.12.3"
						},
						{
							"key": "Date",
							"value": "Mon, 31 Mar 2025 03:50:25 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "83"
						},
						{
							"key": "Connection",
							"value": "close"
						}
					],
					"cookie": [],
					"body": "{\n    \"is_blacklisted\": true,\n    \"blocked_reason\": \"Usuario reportado por spam\"\n}"
				}
			]
		},
		{
			"name": "Caso: Verificar email no enlistado",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/blacklists/otrocorreo@dominio.com",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"blacklists",
						"otrocorreo@dominio.com"
					]
				},
				"description": "Este escenario prueba el caso en que verificamos un email que no está en la lista negra.\n\n**Resultado esperado**: Código 200 con booleano indicando que el email no está en la lista negra."
			},
			"response": [
				{
					"name": "Caso: Verificar email no existente",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/blacklists/otrocorreo@dominio.com",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"blacklists",
								"otrocorreo@dominio.com"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "Werkzeug/3.1.3 Python/3.12.3"
						},
						{
							"key": "Date",
							"value": "Mon, 31 Mar 2025 03:51:05 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "32"
						},
						{
							"key": "Connection",
							"value": "close"
						}
					],
					"cookie": [],
					"body": "{\n    \"is_blacklisted\": false\n}"
				}
			]
		},
		{
			"name": "Caso: Verificar email sin autorización",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/blacklists/otrocorreo@dominio.com",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"blacklists",
						"otrocorreo@dominio.com"
					]
				},
				"description": "Este escenario prueba el caso en que intentamos consultar un email sin proporcionar un token JWT.\n\n**Resultado esperado**: Código 401 Unauthorized con mensaje indicando que se requiere un token válido."
			},
			"response": [
				{
					"name": "Caso: Verificar email sin autorización",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/blacklists/otrocorreo@dominio.com",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"blacklists",
								"otrocorreo@dominio.com"
							]
						}
					},
					"status": "UNAUTHORIZED",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "Werkzeug/3.1.3 Python/3.12.3"
						},
						{
							"key": "Date",
							"value": "Mon, 31 Mar 2025 03:51:27 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "44"
						},
						{
							"key": "Connection",
							"value": "close"
						}
					],
					"cookie": [],
					"body": "{\n    \"msg\": \"Missing Authorization Header\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://127.0.0.1:5000",
			"type": "string"
		},
		{
			"key": "jwt_token",
			"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJPbmxpbmUgSldUIEJ1aWxkZXIiLCJpYXQiOjE3NDMzNTQ4NzcsImV4cCI6MTc3NDg5MDg5MiwiYXVkIjoid3d3LmV4YW1wbGUuY29tIiwic3ViIjoianJvY2tldEBleGFtcGxlLmNvbSIsIkdpdmVuTmFtZSI6IkpvaG5ueSIsIlN1cm5hbWUiOiJSb2NrZXQiLCJFbWFpbCI6Impyb2NrZXRAZXhhbXBsZS5jb20iLCJSb2xlIjpbIk1hbmFnZXIiLCJQcm9qZWN0IEFkbWluaXN0cmF0b3IiXX0.eKKappNb0N-vJtrOnoOau-AnXvEN07Up_HspTt5pia8",
			"type": "string"
		}
	]
}